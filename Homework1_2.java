public class Homework1_2 {
    public static void main(String[] args) {
        int a, b, c;
        boolean t, f, d;
        t = true;
        f = false;
        System.out.println("Example 1");
        a = 5 + 2 / 8; // сначала идет деление, потом сложение. 2/8=0 (деление нацело, т.к. все операнды int'ы) 5+0=5
        System.out.println(a);
        System.out.println("Example 2");
        a = (5 + 2) / 8; // сначала сложение, затем деление. 5+2=7  7/8=0 (см. пример №1)
        System.out.println(a);
        System.out.println("Example 3");
        b = 2;
        a = (5 + b++) / 8; // сперва сложение, т.к. инкремент в постфиксе 5+2=7, затем значение b увеличивается на 1:
        //b+=1  b=2+1=3  полученное значение b НЕ участвует в выражении, т.к. инкремент в постфиксе,
        //в конце деление. 7/8=0    инкремент и декремент можно задавать ТОЛЬКО для переменных
        System.out.println(a);
        System.out.println("Example 4");
        b = 2;
        c = 8;
        a = (5 + b++) / --c; // сначала сложение 5+b, затем b+=1 (как в примере №3), затем вычисляется декремент с,
        //т.к. он стоит в префиксе, а потом уже c участвует в делении.  5+2=7  b=3  c-=1  c=8-1=7  7/7=1
        System.out.println(a);
        System.out.println("Example 5");
        b = 2;
        c = 8;
        a = (5 * b >> b++) / --c; // 1) 5*b=5*2=10  2) 10 >> 2 (т.к. инкремент в постфиксе) (каждый сдвиг вправо
        //означает деление на 2 с отбрасыванием любого остатка) 10/2=5 5/2= 2,5 =2  3) b++  b=3  4) --с c-=1 c=8-1=7
        //5) 2/7=0
        System.out.println(a);
        System.out.println("Example 6");
        b = 2;
        c = 8;
        a = (5 + 7 > 20 ? 68 : 22 * b >> b++) / --c; // 1) --c  c=7  2) 22*b=22*2=44  3) 44 >> 2  44/2=22  22/2=11
        //4) b++  b=3  5) 5+7=12  6) 12 > 20 ? (у тренарного оператора низший приоритет) false, значит значение равно 11
        //7) 11/7=1
        System.out.println(a);
        System.out.println("Example 7");
        b = 2;
        c = 8;
        //a = (5 + 7 > 20 ? 68 => 68 : 22 * b >> b++) / --c;
        // будет ошибка компиляции, поскольку не существует знака "=>", необходим знак ">="
        // если написать правильно, то алгорит был бы следующим: 1) 5+7  2) 68>=68 это true - выдаст ошибку, т.к. это
        //не число  3) 22*b  4) 22*b >> b  5) b++  6) 5+7>20 ?  7) --c  8) результат 6 / результат 7
        System.out.println("Ошибка компиляции");
        System.out.println("Example 8");
        d = 6 - 2 > 3 && 12 * 12 <= 119; // 1) 12*12=144  2) 6-2=4  3) 4>3 true  4) 144<=119 false  5) true && false = false
        System.out.println(d);
        System.out.println("Example 9");
        d = true && false; // true && false = false
        System.out.println(d);
    }
}
